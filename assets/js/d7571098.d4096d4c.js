"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[900],{4793:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=n(4848),i=n(8453);const a={slug:"hexagonal-architecture-java-spring-boot-part-3",title:"Hexagonale Architektur in der Praxis: Umsetzung in einem Java/Spring Boot Projekt \u2013 Teil 3: REST-Schnittstelle mit Antikorruptionsschicht",authors:"ricardo",tags:["Domain-driven Design","Hexagonale Architektur","Softwarearchitektur","Softwareentwicklung"],date:new Date("2024-01-08T00:00:00.000Z")},o=void 0,c={permalink:"/hexagonal-architecture-java-spring-boot-part-3",source:"@site/blog/hexagonal-architecture/part3/part3.mdx",title:"Hexagonale Architektur in der Praxis: Umsetzung in einem Java/Spring Boot Projekt \u2013 Teil 3: REST-Schnittstelle mit Antikorruptionsschicht",description:"banner",date:"2024-01-08T00:00:00.000Z",formattedDate:"8. Januar 2024",tags:[{label:"Domain-driven Design",permalink:"/tags/domain-driven-design"},{label:"Hexagonale Architektur",permalink:"/tags/hexagonale-architektur"},{label:"Softwarearchitektur",permalink:"/tags/softwarearchitektur"},{label:"Softwareentwicklung",permalink:"/tags/softwareentwicklung"}],readingTime:10.135,hasTruncateMarker:!0,authors:[{name:"Ricardo Schnur",title:"Software Developer @ Colenet GmbH",url:"https://github.com/ricardo-schnur",imageURL:"img/profile.png",key:"ricardo"}],frontMatter:{slug:"hexagonal-architecture-java-spring-boot-part-3",title:"Hexagonale Architektur in der Praxis: Umsetzung in einem Java/Spring Boot Projekt \u2013 Teil 3: REST-Schnittstelle mit Antikorruptionsschicht",authors:"ricardo",tags:["Domain-driven Design","Hexagonale Architektur","Softwarearchitektur","Softwareentwicklung"],date:"2024-01-08T00:00:00.000Z"},unlisted:!1,prevItem:{title:"Hexagonale Architektur in der Praxis: Umsetzung in einem Java/Spring Boot Projekt \u2013 Teil 4: Folgen einer \xc4nderung am Dom\xe4nenmodell und die Applikationsschicht",permalink:"/hexagonal-architecture-java-spring-boot-part-4"},nextItem:{title:"Hexagonale Architektur in der Praxis: Umsetzung in einem Java/Spring-Boot-Projekt \u2013 Teil 2: Modellierung, Kernlogik und In-Memory Cache",permalink:"/hexagonal-architecture-java-spring-boot-part-2"}},s={authorsImageUrls:[void 0]},l=[];function u(e){const t={blockquote:"blockquote",img:"img",p:"p",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"banner",src:n(6549).A+"",width:"1028",height:"611"})}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsx)(t.p,{children:"Um zu verstehen, wie hexagonale Architektur die Art und Weise, Software zu entwickeln, ver\xe4ndert und was dabei\ndie Vorteile sind, f\xfchrt Ricardo uns Schritt f\xfcr Schritt durch die Entwicklung einer To-Do-Listen-Anwendung.\nIm 3. Teil wird nun \xfcber eine REST-Schnittstelle die Anwendung interaktiv nutzbar gemacht und die Datenintegrit\xe4t\ndurch eine Antikorruptionsschicht sichergestellt."}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},6549:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/banner-3c6221cdc4cb306e621cac5c416145fb.webp"},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var r=n(6540);const i={},a=r.createContext(i);function o(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);