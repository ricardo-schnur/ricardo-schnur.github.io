"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[472],{5513:e=>{e.exports=JSON.parse('{"title":"Neueste Beitr\xe4ge","items":[{"title":"Hexagonale Architektur in der Praxis: Umsetzung in einem Java/Spring-Boot-Projekt \u2013 Teil 5: Anbindung der Datenbank (am Beispiel einer MongoDB)","permalink":"/hexagonal-architecture-java-spring-boot-part-5","unlisted":false},{"title":"Hexagonale Architektur in der Praxis: Umsetzung in einem Java/Spring Boot Projekt \u2013 Teil 4: Folgen einer \xc4nderung am Dom\xe4nenmodell und die Applikationsschicht","permalink":"/hexagonal-architecture-java-spring-boot-part-4","unlisted":false},{"title":"Hexagonale Architektur in der Praxis: Umsetzung in einem Java/Spring Boot Projekt \u2013 Teil 3: REST-Schnittstelle mit Antikorruptionsschicht","permalink":"/hexagonal-architecture-java-spring-boot-part-3","unlisted":false},{"title":"Hexagonale Architektur in der Praxis: Umsetzung in einem Java/Spring-Boot-Projekt \u2013 Teil 2: Modellierung, Kernlogik und In-Memory Cache","permalink":"/hexagonal-architecture-java-spring-boot-part-2","unlisted":false},{"title":"Hexagonale Architektur in der Praxis: Umsetzung in einem Java/Spring-Boot-Projekt \u2013 Teil 1: Projektbeschreibung, Setup und automatische Architekturtests","permalink":"/hexagonal-architecture-java-spring-boot-part-1","unlisted":false}]}')}}]);